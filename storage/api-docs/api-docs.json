{
    "openapi": "3.0.0",
    "info": {
        "title": "Scraping Master Documentation",
        "description": "Scraping Swagger OpenApi",
        "contact": {
            "email": "vladimir.malits@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost/api",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "description": "Login",
                "operationId": "Login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register new user",
                "description": "Register new user",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please confirm yourself by clicking on verify user button sent to you on your email."
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/email/verify": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify email",
                "description": "Verify email",
                "operationId": "Verify email",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "expires",
                        "in": "query",
                        "description": "expires",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "query",
                        "description": "hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "description": "signature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/auth/email/resend": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Resend email",
                "description": "Resend email",
                "operationId": "Resend",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "title": "Login request",
                "description": "request body data",
                "properties": {
                    "email": {
                        "title": "email",
                        "type": "string",
                        "example": "john_white@gmail.com"
                    },
                    "password": {
                        "title": "password",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "Register request",
                "description": "request body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "type": "string",
                        "example": "John White"
                    },
                    "email": {
                        "title": "email",
                        "type": "string",
                        "example": "john_white@gmail.com"
                    },
                    "password": {
                        "title": "password",
                        "type": "string",
                        "example": "password"
                    },
                    "password_confirmation": {
                        "title": "password_confirmation",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "400": {
                "description": "Bad Request"
            },
            "401": {
                "description": "Unauthenticated"
            },
            "403": {
                "description": "Forbidden"
            }
        },
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "description": "Authorization token obtained from logging in.",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}